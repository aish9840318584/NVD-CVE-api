from database import fetch_cve_data
import requests
import mysql.connector
def store_data_in_mysql(data):
    try:
        connection = mysql.connector.connect(
            host='localhost',
            user='root',
            password='Dhanun@01',
            database='cve_database'
        )

        cursor = connection.cursor()
        for entry in data['vulnerabilities']:
            cve_id = entry['cve']['id']
            description = entry['cve']['descriptions'][0]['value'] if entry['cve']['descriptions'] else ''
            cvss_metrics = entry['cve']['metrics']['cvssMetricV2'][0]['cvssData'] if 'metrics' in entry['cve'] and 'cvssMetricV2' in entry['cve']['metrics'] else {}
            Score = cvss_metrics.get('baseScore', '') if cvss_metrics else None
            severity = cvss_metrics.get('baseSeverity', '') if cvss_metrics else ''
            vector_string = cvss_metrics.get('vectorString', '') if cvss_metrics else ''
            published_date = entry['cve'].get('published', '')
            last_modified_date = entry['cve'].get('lastModified', '')
            access_vector = cvss_metrics.get('accessVector', '')
            access_complexity = cvss_metrics.get('accessComplexity', '')
            authentication = cvss_metrics.get('authentication', '')
            confidentiality_impact = cvss_metrics.get('confidentialityImpact', '')
            integrity_impact = cvss_metrics.get('integrityImpact', '')
            availability_impact = cvss_metrics.get('availabilityImpact', '')

            insert_query = "INSERT INTO final (cve_id, description,base_score, severity,vector_string, published_date, last_modified_date, access_vector, access_complexity, authentication, confidentiality_impact, integrity_impact, availability_impact) VALUES (%s,%s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
            cursor.execute(insert_query, (cve_id, description,Score, severity,vector_string, published_date, last_modified_date, access_vector, access_complexity, authentication, confidentiality_impact, integrity_impact, availability_impact))

        connection.commit()
        print("Data successfully stored in MySQL database")

    except mysql.connector.Error as error:
        print("Failed to store data in MySQL database:", error)

    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()

def main():
    cve_data = fetch_cve_data()
    if cve_data:
        store_data_in_mysql(cve_data)

if _name_ == "_main_":
    main()
